name: Unit Test
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  deploy:
    name: Running unit tests
    runs-on: macos-13
    steps:
      - name: Select Xcode version
        run: sudo xcode-select -s '/Applications/Xcode_14.3.1.app/Contents/Developer'
        
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Get current date
        run: echo "NOW=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV



      # # Temporary step due to Xcode 15 / Github actions runner issues
      # - name: Install iOS 16 simulator for Xcode 15
      #   run: |
      #     # Make iOS 16.4 simulator runtime available to Xcode 15
      #     sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
      #     sudo ln -s /Applications/Xcode_14.3.1.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 16.4.simruntime

      #     # Create an iOS 16.4 simulator
      #     xcrun simctl create "iPhone 14 Pro (16.4)" "com.apple.CoreSimulator.SimDeviceType.iPhone-14-Pro" "com.apple.CoreSimulator.SimRuntime.iOS-16-4"




      # - name: Install yeetd
      #   run: |
      #     wget https://github.com/biscuitehh/yeetd/releases/download/1.0/yeetd-normal.pkg
      #     sudo installer -pkg yeetd-normal.pkg -target /
      #     yeetd &





      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: "swift"
      
      # - name: Launch simulator
      #   run: open -a Simulator --args -CurrentDeviceUDID $(xcrun simctl list --json | ruby -e "require 'json'; puts JSON.parse(ARGF.read)['devices']['com.apple.CoreSimulator.SimRuntime.iOS-17-0'].find { |s| s['name'] == 'iPhone 15 Pro' }['udid']")

      - name: Test
        run: xcodebuild test -scheme KukaiCoreSwift -destination "platform=iOS Simulator,OS=16.4,name=iPhone 14" -enableCodeCoverage YES -resultBundlePath "~/xcode-$NOW.xcresult"

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:swift"
      
      - name: Upload results
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v3.1.3
        with:
          name: "results-${{ env.NOW }}.xcresult"
          path: "~/xcode-${{ env.NOW }}.xcresult"









# Checkout the code, and run mxcl's xcodebuild action to run the unit tests
# jobs:
#   build:
#     runs-on: macos-13
#     strategy:
#       matrix:
#         platform:
#           - iOS
#         xcode:
#           - ^15
#     steps:
#       - uses: actions/checkout@v4.1.1

#       - name: Initialize CodeQL
#         uses: github/codeql-action/init@v2
#         with:
#           languages: "swift"

#       - uses: mxcl/xcodebuild@v2.0
#         with:
#           platform: ${{ matrix.platform }}
#           xcode: ${{ matrix.xcode }}
#           action: test
#           scheme: KukaiCoreSwift
#           code-coverage: true
#           upload-logs: always

#       - name: Perform CodeQL Analysis
#         uses: github/codeql-action/analyze@v2
#         with:
#           category: "/language:swift"
      
      #- name: Test
      #  run: xcodebuild -scheme KukaiCoreSwift test -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 12' -enableCodeCoverage YES -resultBundlePath "../../xcode-$GITHUB_RUN_ID.xcresult"
      #
      #- name: Upload results
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: "results-$GITHUB_RUN_ID.xcresult"
      #    path: "/Users/runner/work/xcode-$GITHUB_RUN_ID.xcresult"


      